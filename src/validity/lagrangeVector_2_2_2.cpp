#include "lagrangeVector.hpp"

#define R(p, q) (Interval(p) / q)

namespace element_validity {
template<>
void lagrangeVectorT<2, 2, 2>(const std::vector<fp_t> &cpFP, std::vector<Interval> &out) {
	out.resize(18);
	const uint S = cpFP.size();
	std::vector<Interval> cp(S);
	for (uint i = 0; i < S; ++i) cp[i] = cpFP[i];
	const Interval tmp_0 = cp[14]*cp[20];
	const Interval tmp_1 = 12*cp[0];
	const Interval tmp_2 = 12*cp[2];
	const Interval tmp_3 = cp[22]*cp[4];
	const Interval tmp_4 = 4*tmp_3;
	const Interval tmp_5 = cp[0]*cp[6];
	const Interval tmp_6 = 3*tmp_5;
	const Interval tmp_7 = cp[2]*cp[4];
	const Interval tmp_8 = cp[20]*cp[6];
	const Interval tmp_9 = 4*tmp_8;
	const Interval tmp_10 = cp[12]*cp[22];
	const Interval tmp_11 = cp[2]*cp[8];
	const Interval tmp_12 = cp[0]*cp[10];
	const Interval tmp_13 = -3*tmp_11 + 3*tmp_12;
	const Interval tmp_14 = cp[10]*cp[12];
	const Interval tmp_15 = cp[14]*cp[8];
	const Interval tmp_16 = -4*tmp_14 + 4*tmp_15;
	const Interval tmp_17 = cp[10]*cp[4];
	const Interval tmp_18 = cp[6]*cp[8];
	const Interval tmp_19 = tmp_17 - tmp_18;
	const Interval tmp_20 = cp[20]*cp[7];
	const Interval tmp_21 = cp[21]*cp[6];
	const Interval tmp_22 = cp[21]*cp[7];
	const Interval tmp_23 = cp[22]*cp[5];
	const Interval tmp_24 = cp[23]*cp[4];
	const Interval tmp_25 = cp[23]*cp[5];
	const Interval tmp_26 = 4*cp[21];
	const Interval tmp_27 = 4*cp[20];
	const Interval tmp_28 = 3*cp[0];
	const Interval tmp_29 = 3*cp[12];
	const Interval tmp_30 = 3*cp[13];
	const Interval tmp_31 = 3*cp[1];
	const Interval tmp_32 = 3*cp[20];
	const Interval tmp_33 = 3*cp[21];
	const Interval tmp_34 = 4*cp[23];
	const Interval tmp_35 = 4*cp[22];
	const Interval tmp_36 = (R(3, 4))*tmp_5;
	const Interval tmp_37 = cp[0]*cp[7];
	const Interval tmp_38 = (R(3, 4))*tmp_37;
	const Interval tmp_39 = cp[1]*cp[6];
	const Interval tmp_40 = (R(3, 4))*tmp_39;
	const Interval tmp_41 = cp[1]*cp[7];
	const Interval tmp_42 = (R(3, 4))*tmp_41;
	const Interval tmp_43 = cp[6]*cp[9];
	const Interval tmp_44 = cp[7]*cp[8];
	const Interval tmp_45 = cp[7]*cp[9];
	const Interval tmp_46 = cp[10]*cp[5];
	const Interval tmp_47 = cp[11]*cp[4];
	const Interval tmp_48 = cp[11]*cp[5];
	const Interval tmp_49 = cp[2]*cp[5];
	const Interval tmp_50 = cp[3]*cp[4];
	const Interval tmp_51 = cp[3]*cp[5];
	const Interval tmp_52 = cp[2]*cp[9];
	const Interval tmp_53 = cp[3]*cp[8];
	const Interval tmp_54 = cp[3]*cp[9];
	const Interval tmp_55 = cp[0]*cp[11];
	const Interval tmp_56 = cp[10]*cp[1];
	const Interval tmp_57 = cp[11]*cp[1];
	const Interval tmp_58 = -R(3, 4)*tmp_11 + (R(3, 4))*tmp_12 - R(3, 4)*tmp_52 - R(3, 4)*tmp_53 - R(3, 4)*tmp_54 + (R(3, 4))*tmp_55 + (R(3, 4))*tmp_56 + (R(3, 4))*tmp_57;
	const Interval tmp_59 = cp[14]*cp[9];
	const Interval tmp_60 = cp[15]*cp[8];
	const Interval tmp_61 = cp[15]*cp[9];
	const Interval tmp_62 = cp[10]*cp[13];
	const Interval tmp_63 = cp[11]*cp[12];
	const Interval tmp_64 = cp[11]*cp[13];
	const Interval tmp_65 = -tmp_14 + tmp_15 + tmp_59 + tmp_60 + tmp_61 - tmp_62 - tmp_63 - tmp_64;
	const Interval tmp_66 = 3*tmp_41;
	const Interval tmp_67 = 3*tmp_54;
	const Interval tmp_68 = 16*cp[21];
	const Interval tmp_69 = -4*tmp_22 + 4*tmp_25;
	const Interval tmp_70 = -4*tmp_61 + 4*tmp_64;
	const Interval tmp_71 = tmp_45 - tmp_48;
	const Interval tmp_72 = 2*cp[0];
	const Interval tmp_73 = cp[22]*tmp_72;
	const Interval tmp_74 = 2*cp[10];
	const Interval tmp_75 = cp[20]*tmp_74;
	const Interval tmp_76 = 2*cp[2];
	const Interval tmp_77 = cp[12]*tmp_76;
	const Interval tmp_78 = 2*cp[8];
	const Interval tmp_79 = cp[18]*tmp_78;
	const Interval tmp_80 = cp[0]*cp[18];
	const Interval tmp_81 = cp[16]*cp[2];
	const Interval tmp_82 = tmp_5 - tmp_7;
	const Interval tmp_83 = -tmp_11 + tmp_12;
	const Interval tmp_84 = -2*tmp_80 + 2*tmp_81 + tmp_82 + tmp_83;
	const Interval tmp_85 = -2*tmp_14 + 2*tmp_15 + tmp_19;
	const Interval tmp_86 = -2*cp[0]*cp[14] - 2*cp[10]*cp[16] - 2*cp[20]*cp[2] - 2*cp[22]*cp[8] + tmp_73 + tmp_75 + tmp_77 + tmp_79 + tmp_84 + tmp_85;
	const Interval tmp_87 = cp[23]*tmp_72;
	const Interval tmp_88 = cp[21]*tmp_74;
	const Interval tmp_89 = 2*cp[11];
	const Interval tmp_90 = cp[20]*tmp_89;
	const Interval tmp_91 = 2*cp[3];
	const Interval tmp_92 = cp[12]*tmp_91;
	const Interval tmp_93 = cp[13]*tmp_76;
	const Interval tmp_94 = cp[13]*tmp_91;
	const Interval tmp_95 = 2*cp[9];
	const Interval tmp_96 = cp[18]*tmp_95;
	const Interval tmp_97 = cp[19]*tmp_78;
	const Interval tmp_98 = 2*cp[1];
	const Interval tmp_99 = cp[22]*tmp_98;
	const Interval tmp_100 = cp[23]*tmp_98;
	const Interval tmp_101 = tmp_41 - tmp_51;
	const Interval tmp_102 = -tmp_54;
	const Interval tmp_103 = cp[19]*cp[1];
	const Interval tmp_104 = 2*tmp_103;
	const Interval tmp_105 = cp[17]*cp[3];
	const Interval tmp_106 = 2*tmp_105;
	const Interval tmp_107 = tmp_102 - tmp_104 + tmp_106 + tmp_57;
	const Interval tmp_108 = cp[21]*tmp_89;
	const Interval tmp_109 = cp[19]*tmp_95;
	const Interval tmp_110 = -2*cp[11]*cp[17] - 2*cp[23]*cp[9] + tmp_108 + tmp_109;
	const Interval tmp_111 = -tmp_52;
	const Interval tmp_112 = -tmp_53;
	const Interval tmp_113 = cp[0]*cp[19];
	const Interval tmp_114 = cp[18]*cp[1];
	const Interval tmp_115 = cp[16]*cp[3];
	const Interval tmp_116 = cp[17]*cp[2];
	const Interval tmp_117 = tmp_111 + tmp_112 - 2*tmp_113 - 2*tmp_114 + 2*tmp_115 + 2*tmp_116 + tmp_37 + tmp_39 - tmp_49 - tmp_50 + tmp_55 + tmp_56;
	const Interval tmp_118 = 2*tmp_64;
	const Interval tmp_119 = 2*tmp_61;
	const Interval tmp_120 = -tmp_118 + tmp_119 - tmp_43 - tmp_44 - tmp_45 + tmp_46 + tmp_47 + tmp_48 + 2*tmp_59 + 2*tmp_60 - 2*tmp_62 - 2*tmp_63;
	const Interval tmp_121 = tmp_54 - tmp_57;
	const Interval tmp_122 = tmp_118 - tmp_119 + tmp_121 + tmp_71;
	const Interval tmp_123 = cp[15]*tmp_98 + cp[21]*tmp_91 - tmp_100 - tmp_94;
	const Interval tmp_124 = cp[17]*tmp_89 + cp[23]*tmp_95 - tmp_108 - tmp_109 - tmp_41 + tmp_51;
	const Interval tmp_125 = 12*cp[10];
	const Interval tmp_126 = 12*cp[8];
	const Interval tmp_127 = 3*tmp_17;
	const Interval tmp_128 = 16*cp[18];
	const Interval tmp_129 = -4*tmp_80 + 4*tmp_81;
	const Interval tmp_130 = 3*cp[18];
	const Interval tmp_131 = 3*cp[19];
	const Interval tmp_132 = 3*cp[10];
	const Interval tmp_133 = 3*cp[11];
	const Interval tmp_134 = 3*cp[22];
	const Interval tmp_135 = 3*cp[23];
	const Interval tmp_136 = (R(3, 4))*tmp_17;
	const Interval tmp_137 = (R(3, 4))*tmp_46;
	const Interval tmp_138 = (R(3, 4))*tmp_47;
	const Interval tmp_139 = (R(3, 4))*tmp_48;
	const Interval tmp_140 = -tmp_103 + tmp_105 - tmp_113 - tmp_114 + tmp_115 + tmp_116 - tmp_80 + tmp_81;
	const Interval tmp_141 = 12*cp[11];
	const Interval tmp_142 = 12*cp[9];
	const Interval tmp_143 = 4*tmp_103;
	const Interval tmp_144 = 4*tmp_105;
	const Interval tmp_145 = 3*tmp_45 - 3*tmp_48;
	const Interval tmp_146 = 2*tmp_8;
	const Interval tmp_147 = 2*tmp_3;
	const Interval tmp_148 = 2*cp[4];
	const Interval tmp_149 = 2*cp[6];
	const Interval tmp_150 = cp[12]*tmp_149 - cp[14]*tmp_148 - cp[16]*tmp_149 + cp[18]*tmp_148;
	const Interval tmp_151 = cp[14]*tmp_72 + cp[20]*tmp_76 - tmp_146 + tmp_147 + tmp_150 - tmp_17 + tmp_18 - tmp_73 - tmp_77 + tmp_84;
	const Interval tmp_152 = 2*tmp_20;
	const Interval tmp_153 = 2*tmp_21;
	const Interval tmp_154 = 2*tmp_23;
	const Interval tmp_155 = 2*tmp_24;
	const Interval tmp_156 = 2*tmp_22;
	const Interval tmp_157 = 2*tmp_25;
	const Interval tmp_158 = tmp_101 - tmp_156 + tmp_157;
	const Interval tmp_159 = 2*cp[5];
	const Interval tmp_160 = cp[15]*tmp_159;
	const Interval tmp_161 = 2*cp[7];
	const Interval tmp_162 = cp[17]*tmp_161;
	const Interval tmp_163 = cp[13]*tmp_161 + cp[19]*tmp_159 - tmp_160 - tmp_162;
	const Interval tmp_164 = tmp_107 + tmp_123 + tmp_158 + tmp_163 + tmp_71;
	const Interval tmp_165 = cp[12]*tmp_161 + cp[13]*tmp_149 - cp[14]*tmp_159 - cp[15]*tmp_148 - cp[16]*tmp_161 - cp[17]*tmp_149 + cp[18]*tmp_159 + cp[19]*tmp_148;
	const Interval tmp_166 = cp[16]*tmp_74 + cp[22]*tmp_78 + tmp_146 - tmp_147 + tmp_150 - tmp_5 + tmp_7 - tmp_75 - tmp_79 + tmp_83 + tmp_85;
	const Interval tmp_167 = 3*cp[14];
	const Interval tmp_168 = 3*cp[15];
	const Interval tmp_169 = 3*cp[16];
	const Interval tmp_170 = 3*cp[17];
	const Interval tmp_171 = 4*cp[12];
	const Interval tmp_172 = 4*cp[13];
	const Interval tmp_173 = 12*cp[5];
	const Interval tmp_174 = 12*cp[7];
	out[0] = -cp[12]*tmp_2 + cp[14]*tmp_1 + cp[20]*tmp_2 - cp[22]*tmp_1 - 16*tmp_0 + 16*tmp_10 + tmp_13 + tmp_16 + tmp_19 - tmp_4 - tmp_6 + 3*tmp_7 + tmp_9;
	out[1] = cp[12]*tmp_34 + cp[13]*tmp_34 + cp[13]*tmp_35 - cp[14]*tmp_26 + cp[14]*tmp_28 + cp[14]*tmp_31 - cp[15]*tmp_26 - cp[15]*tmp_27 + cp[15]*tmp_28 + cp[15]*tmp_31 - cp[22]*tmp_28 - cp[22]*tmp_31 - cp[23]*tmp_28 - cp[23]*tmp_31 - cp[2]*tmp_29 - cp[2]*tmp_30 + cp[2]*tmp_32 + cp[2]*tmp_33 - cp[3]*tmp_29 - cp[3]*tmp_30 + cp[3]*tmp_32 + cp[3]*tmp_33 - 4*tmp_0 + 4*tmp_10 + (R(1, 4))*tmp_17 - R(1, 4)*tmp_18 + tmp_20 + tmp_21 + tmp_22 - tmp_23 - tmp_24 - tmp_25 - tmp_3 - tmp_36 - tmp_38 - tmp_40 - tmp_42 - R(1, 4)*tmp_43 - R(1, 4)*tmp_44 - R(1, 4)*tmp_45 + (R(1, 4))*tmp_46 + (R(1, 4))*tmp_47 + (R(1, 4))*tmp_48 + (R(3, 4))*tmp_49 + (R(3, 4))*tmp_50 + (R(3, 4))*tmp_51 + tmp_58 + tmp_65 + (R(3, 4))*tmp_7 + tmp_8;
	out[2] = 3*cp[11]*cp[1] + 16*cp[13]*cp[23] - 12*cp[13]*cp[3] + 12*cp[15]*cp[1] - cp[15]*tmp_68 - 12*cp[1]*cp[23] + 12*cp[21]*cp[3] + 3*cp[3]*cp[5] - tmp_66 - tmp_67 - tmp_69 - tmp_70 - tmp_71;
	out[3] = -tmp_86;
	out[4] = (R(1, 2))*cp[0]*cp[15] + (R(1, 2))*cp[10]*cp[17] + (R(1, 2))*cp[11]*cp[16] + (R(1, 2))*cp[14]*cp[1] + (R(1, 2))*cp[15]*cp[1] + (R(1, 2))*cp[20]*cp[3] + (R(1, 2))*cp[21]*cp[2] + (R(1, 2))*cp[21]*cp[3] + (R(1, 2))*cp[22]*cp[9] + (R(1, 2))*cp[23]*cp[8] - R(1, 4)*tmp_100 - R(1, 4)*tmp_101 - R(1, 4)*tmp_107 - R(1, 4)*tmp_110 - R(1, 4)*tmp_117 - R(1, 4)*tmp_120 - R(1, 4)*tmp_86 - R(1, 4)*tmp_87 - R(1, 4)*tmp_88 - R(1, 4)*tmp_90 - R(1, 4)*tmp_92 - R(1, 4)*tmp_93 - R(1, 4)*tmp_94 - R(1, 4)*tmp_96 - R(1, 4)*tmp_97 - R(1, 4)*tmp_99;
	out[5] = tmp_104 - tmp_106 + tmp_122 + tmp_123 + tmp_124;
	out[6] = -16*cp[16]*cp[22] + cp[16]*tmp_125 - cp[18]*tmp_126 - cp[20]*tmp_125 + cp[20]*tmp_128 + cp[22]*tmp_126 - tmp_127 + tmp_129 + tmp_13 + 3*tmp_18 + tmp_4 + tmp_82 - tmp_9;
	out[7] = -cp[10]*tmp_32 - cp[10]*tmp_33 - cp[11]*tmp_32 - cp[11]*tmp_33 + cp[16]*tmp_132 + cp[16]*tmp_133 - cp[16]*tmp_34 - cp[16]*tmp_35 + cp[17]*tmp_132 + cp[17]*tmp_133 - cp[17]*tmp_34 - cp[17]*tmp_35 + cp[18]*tmp_26 + cp[18]*tmp_27 + cp[19]*tmp_26 + cp[19]*tmp_27 - cp[8]*tmp_130 - cp[8]*tmp_131 + cp[8]*tmp_134 + cp[8]*tmp_135 - cp[9]*tmp_130 - cp[9]*tmp_131 + cp[9]*tmp_134 + cp[9]*tmp_135 - tmp_136 - tmp_137 - tmp_138 - tmp_139 + tmp_140 + (R(3, 4))*tmp_18 - tmp_20 - tmp_21 - tmp_22 + tmp_23 + tmp_24 + tmp_25 + tmp_3 + (R(1, 4))*tmp_37 + (R(1, 4))*tmp_39 + (R(1, 4))*tmp_41 + (R(3, 4))*tmp_43 + (R(3, 4))*tmp_44 + (R(3, 4))*tmp_45 - R(1, 4)*tmp_49 + (R(1, 4))*tmp_5 - R(1, 4)*tmp_50 - R(1, 4)*tmp_51 + tmp_58 - R(1, 4)*tmp_7 - tmp_8;
	out[8] = -16*cp[17]*cp[23] + cp[17]*tmp_141 - cp[19]*tmp_142 + cp[19]*tmp_68 - cp[21]*tmp_141 + cp[23]*tmp_142 + tmp_101 - tmp_143 + tmp_144 + tmp_145 + 3*tmp_57 - tmp_67 + tmp_69;
	out[9] = tmp_151;
	out[10] = (R(1, 4))*cp[14]*tmp_98 + (R(1, 4))*cp[15]*tmp_72 + (R(1, 4))*cp[20]*tmp_91 + (R(1, 4))*cp[21]*tmp_76 + (R(1, 4))*tmp_117 + (R(1, 4))*tmp_151 - R(1, 4)*tmp_152 - R(1, 4)*tmp_153 + (R(1, 4))*tmp_154 + (R(1, 4))*tmp_155 + (R(1, 4))*tmp_164 + (R(1, 4))*tmp_165 + (R(1, 4))*tmp_43 + (R(1, 4))*tmp_44 - R(1, 4)*tmp_46 - R(1, 4)*tmp_47 - R(1, 4)*tmp_87 - R(1, 4)*tmp_92 - R(1, 4)*tmp_93 - R(1, 4)*tmp_99;
	out[11] = tmp_164;
	out[12] = tmp_166;
	out[13] = (R(1, 4))*cp[16]*tmp_89 + (R(1, 4))*cp[17]*tmp_74 + (R(1, 4))*cp[22]*tmp_95 + (R(1, 4))*cp[23]*tmp_78 + (R(1, 4))*tmp_102 + (R(1, 4))*tmp_111 + (R(1, 4))*tmp_112 + (R(1, 4))*tmp_120 + (R(1, 4))*tmp_124 + (R(1, 4))*tmp_152 + (R(1, 4))*tmp_153 - R(1, 4)*tmp_154 - R(1, 4)*tmp_155 + (R(1, 4))*tmp_156 - R(1, 4)*tmp_157 + (R(1, 4))*tmp_163 + (R(1, 4))*tmp_165 + (R(1, 4))*tmp_166 - R(1, 4)*tmp_37 - R(1, 4)*tmp_39 + (R(1, 4))*tmp_49 + (R(1, 4))*tmp_50 + (R(1, 4))*tmp_55 + (R(1, 4))*tmp_56 + (R(1, 4))*tmp_57 - R(1, 4)*tmp_88 - R(1, 4)*tmp_90 - R(1, 4)*tmp_96 - R(1, 4)*tmp_97;
	out[14] = 2*cp[13]*cp[7] + 2*cp[19]*cp[5] - tmp_110 - tmp_122 - tmp_158 - tmp_160 - tmp_162;
	out[15] = 12*cp[12]*cp[6] - cp[12]*tmp_128 + 16*cp[14]*cp[16] - 12*cp[14]*cp[4] - 12*cp[16]*cp[6] + 12*cp[18]*cp[4] + 3*cp[2]*cp[4] + 3*cp[6]*cp[8] - tmp_127 - tmp_129 - tmp_16 - tmp_6 - tmp_83;
	out[16] = 3*cp[12]*cp[6] + 3*cp[12]*cp[7] + 3*cp[13]*cp[6] + 3*cp[13]*cp[7] + 4*cp[14]*cp[16] + 4*cp[14]*cp[17] + 4*cp[15]*cp[16] + 4*cp[15]*cp[17] + 3*cp[18]*cp[4] + 3*cp[18]*cp[5] - cp[18]*tmp_171 - cp[18]*tmp_172 + 3*cp[19]*cp[4] + 3*cp[19]*cp[5] - cp[19]*tmp_171 - cp[19]*tmp_172 + (R(3, 4))*cp[2]*cp[4] + (R(3, 4))*cp[2]*cp[5] + (R(1, 4))*cp[2]*cp[8] + (R(1, 4))*cp[2]*cp[9] + (R(3, 4))*cp[3]*cp[4] + (R(3, 4))*cp[3]*cp[5] + (R(1, 4))*cp[3]*cp[8] + (R(1, 4))*cp[3]*cp[9] - cp[4]*tmp_167 - cp[4]*tmp_168 - cp[5]*tmp_167 - cp[5]*tmp_168 + (R(3, 4))*cp[6]*cp[8] + (R(3, 4))*cp[6]*cp[9] - cp[6]*tmp_169 - cp[6]*tmp_170 + (R(3, 4))*cp[7]*cp[8] + (R(3, 4))*cp[7]*cp[9] - cp[7]*tmp_169 - cp[7]*tmp_170 - R(1, 4)*tmp_12 - tmp_136 - tmp_137 - tmp_138 - tmp_139 - tmp_140 - tmp_36 - tmp_38 - tmp_40 - tmp_42 - R(1, 4)*tmp_55 - R(1, 4)*tmp_56 - R(1, 4)*tmp_57 - tmp_65;
	out[17] = -16*cp[13]*cp[19] + cp[13]*tmp_174 + 16*cp[15]*cp[17] - cp[15]*tmp_173 - cp[17]*tmp_174 + cp[19]*tmp_173 + tmp_121 + tmp_143 - tmp_144 + tmp_145 + 3*tmp_51 - tmp_66 + tmp_70;
}}
