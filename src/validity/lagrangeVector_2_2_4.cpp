#include "lagrangeVector.hpp"

#define R(p, q) (Interval(p) / q)
#define I const Interval 

namespace element_validity {
template<>
void lagrangeVector<2, 2, 4>(const std::span<const fp_t> cpFP, const std::span<Interval> out) {
	assert(cpFP.size() == 30);
	assert(out.size() == 28);
	std::array<Interval, 30> cp;
	for (uint i = 0; i < 30; ++i) cp[i] = cpFP[i];
	I tmp_0 = (R(25, 3))*cp[0];
	I tmp_1 = 12*cp[8];
	I tmp_2 = (R(25, 3))*cp[1];
	I tmp_3 = 12*cp[21];
	I tmp_4 = 12*cp[20];
	I tmp_5 = 12*cp[9];
	I tmp_6 = (R(209, 81))*cp[0];
	I tmp_7 = -tmp_6;
	I tmp_8 = (R(104, 27))*cp[20];
	I tmp_9 = (R(25, 81))*cp[4];
	I tmp_10 = (R(8, 81))*cp[22] + tmp_9;
	I tmp_11 = (R(209, 81))*cp[1];
	I tmp_12 = -tmp_11;
	I tmp_13 = -cp[3];
	I tmp_14 = -R(40, 9)*cp[29] + tmp_13;
	I tmp_15 = (R(8, 9))*cp[13];
	I tmp_16 = (R(16, 81))*cp[19];
	I tmp_17 = (R(16, 81))*cp[17];
	I tmp_18 = -tmp_16 + tmp_17;
	I tmp_19 = tmp_15 + tmp_18;
	I tmp_20 = -R(40, 27)*cp[27];
	I tmp_21 = -R(70, 9)*cp[9] + tmp_20;
	I tmp_22 = (R(104, 27))*cp[21];
	I tmp_23 = (R(25, 81))*cp[5];
	I tmp_24 = (R(8, 81))*cp[23] + tmp_23;
	I tmp_25 = (R(8, 9))*cp[12];
	I tmp_26 = -tmp_25;
	I tmp_27 = (R(16, 81))*cp[16];
	I tmp_28 = (R(16, 81))*cp[18];
	I tmp_29 = -tmp_27 + tmp_28;
	I tmp_30 = (R(40, 9))*cp[28] + cp[2];
	I tmp_31 = (R(40, 27))*cp[26];
	I tmp_32 = (R(70, 9))*cp[8] + tmp_31;
	I tmp_33 = -R(2, 9)*cp[14] - R(280, 27)*cp[24] + tmp_6;
	I tmp_34 = (R(7, 81))*cp[0];
	I tmp_35 = -R(148, 27)*cp[20];
	I tmp_36 = -R(11, 81)*cp[4];
	I tmp_37 = -R(16, 9)*cp[13];
	I tmp_38 = (R(64, 9))*cp[29] + cp[3];
	I tmp_39 = (R(64, 27))*cp[27];
	I tmp_40 = -tmp_39;
	I tmp_41 = (R(40, 9))*cp[9] + tmp_40;
	I tmp_42 = (R(7, 81))*cp[1];
	I tmp_43 = (R(4, 9))*cp[15] - R(320, 27)*cp[25] + tmp_42;
	I tmp_44 = -R(148, 27)*cp[21];
	I tmp_45 = -R(11, 81)*cp[5];
	I tmp_46 = -R(16, 9)*cp[12];
	I tmp_47 = -tmp_28;
	I tmp_48 = tmp_27 + tmp_47;
	I tmp_49 = (R(64, 9))*cp[28] + cp[2];
	I tmp_50 = (R(64, 27))*cp[26];
	I tmp_51 = -tmp_50;
	I tmp_52 = (R(40, 9))*cp[8] + tmp_51;
	I tmp_53 = (R(4, 9))*cp[14] - R(320, 27)*cp[24] + tmp_34;
	I tmp_54 = (R(1, 3))*cp[0];
	I tmp_55 = (R(8, 3))*cp[22];
	I tmp_56 = -tmp_55;
	I tmp_57 = (R(1, 3))*cp[4];
	I tmp_58 = -tmp_57;
	I tmp_59 = tmp_56 + tmp_58;
	I tmp_60 = 8*cp[29];
	I tmp_61 = (R(8, 3))*cp[23];
	I tmp_62 = 8*cp[27];
	I tmp_63 = 2*cp[9];
	I tmp_64 = -tmp_62 + tmp_63;
	I tmp_65 = -R(1, 3)*cp[1];
	I tmp_66 = 2*cp[15] - 8*cp[25] + tmp_65;
	I tmp_67 = (R(1, 3))*cp[1];
	I tmp_68 = -tmp_61;
	I tmp_69 = (R(1, 3))*cp[5];
	I tmp_70 = -tmp_69;
	I tmp_71 = tmp_68 + tmp_70;
	I tmp_72 = 8*cp[28];
	I tmp_73 = 8*cp[26];
	I tmp_74 = 2*cp[8];
	I tmp_75 = -tmp_73 + tmp_74;
	I tmp_76 = -R(1, 3)*cp[0];
	I tmp_77 = 2*cp[14] - 8*cp[24] + tmp_76;
	I tmp_78 = (R(11, 81))*cp[0];
	I tmp_79 = -tmp_78;
	I tmp_80 = (R(7, 81))*cp[4];
	I tmp_81 = (R(16, 81))*cp[7];
	I tmp_82 = (R(160, 81))*cp[19];
	I tmp_83 = -R(160, 81)*cp[17] - R(32, 27)*cp[23] + tmp_82;
	I tmp_84 = -R(320, 27)*cp[27] + (R(4, 9))*cp[9];
	I tmp_85 = (R(11, 81))*cp[1];
	I tmp_86 = (R(64, 27))*cp[25];
	I tmp_87 = (R(40, 9))*cp[15] + tmp_85 - tmp_86;
	I tmp_88 = -tmp_85;
	I tmp_89 = (R(7, 81))*cp[5];
	I tmp_90 = (R(16, 81))*cp[6];
	I tmp_91 = (R(160, 81))*cp[18];
	I tmp_92 = -R(160, 81)*cp[16] - R(32, 27)*cp[22] + tmp_91;
	I tmp_93 = -R(320, 27)*cp[26] + (R(4, 9))*cp[8];
	I tmp_94 = (R(64, 27))*cp[24];
	I tmp_95 = (R(40, 9))*cp[14] + tmp_78 - tmp_94;
	I tmp_96 = (R(25, 81))*cp[0];
	I tmp_97 = (R(8, 81))*cp[18] + tmp_96;
	I tmp_98 = (R(560, 81))*cp[19];
	I tmp_99 = (R(70, 9))*cp[15];
	I tmp_100 = (R(40, 27))*cp[25];
	I tmp_101 = (R(25, 81))*cp[1];
	I tmp_102 = -tmp_100 - tmp_101;
	I tmp_103 = (R(280, 27))*cp[27] + (R(2, 9))*cp[9];
	I tmp_104 = -R(209, 81)*cp[5];
	I tmp_105 = (R(8, 81))*cp[19] + tmp_101;
	I tmp_106 = -R(8, 9)*cp[10];
	I tmp_107 = (R(560, 81))*cp[18];
	I tmp_108 = -R(280, 27)*cp[26] - R(2, 9)*cp[8];
	I tmp_109 = (R(40, 27))*cp[24];
	I tmp_110 = (R(70, 9))*cp[14] + tmp_109 + tmp_96;
	I tmp_111 = cp[0] - 16*cp[18] - R(16, 3)*cp[22] + tmp_4;
	I tmp_112 = 12*cp[15];
	I tmp_113 = -16*cp[19] + cp[1] - R(16, 3)*cp[23] + tmp_3;
	I tmp_114 = -12*cp[14];
	I tmp_115 = (R(104, 27))*cp[8];
	I tmp_116 = (R(25, 81))*cp[2];
	I tmp_117 = (R(8, 81))*cp[6] + tmp_116;
	I tmp_118 = (R(8, 9))*cp[17];
	I tmp_119 = -tmp_118;
	I tmp_120 = (R(40, 27))*cp[29];
	I tmp_121 = (R(70, 9))*cp[21];
	I tmp_122 = (R(16, 81))*cp[13];
	I tmp_123 = (R(16, 81))*cp[11];
	I tmp_124 = -tmp_122 + tmp_123;
	I tmp_125 = (R(40, 9))*cp[27] + cp[5];
	I tmp_126 = (R(104, 27))*cp[9];
	I tmp_127 = (R(25, 81))*cp[3];
	I tmp_128 = (R(8, 81))*cp[7] + tmp_127;
	I tmp_129 = (R(8, 9))*cp[16];
	I tmp_130 = -tmp_129;
	I tmp_131 = (R(16, 81))*cp[12];
	I tmp_132 = (R(16, 81))*cp[10];
	I tmp_133 = -tmp_131 + tmp_132;
	I tmp_134 = (R(40, 27))*cp[28];
	I tmp_135 = (R(70, 9))*cp[20] + tmp_134;
	I tmp_136 = (R(40, 9))*cp[26] + cp[4];
	I tmp_137 = -R(25, 81)*cp[2];
	I tmp_138 = (R(8, 27))*cp[12] + tmp_29;
	I tmp_139 = (R(8, 9))*cp[26] - R(22, 9)*cp[8];
	I tmp_140 = (R(2, 27))*cp[14] - R(56, 27)*cp[24] + tmp_34;
	I tmp_141 = -R(25, 81)*cp[5];
	I tmp_142 = (R(8, 27))*cp[17] + tmp_124;
	I tmp_143 = -R(22, 9)*cp[21] + (R(8, 9))*cp[29];
	I tmp_144 = (R(2, 27))*cp[15] - R(56, 27)*cp[25] + tmp_42;
	I tmp_145 = -R(25, 81)*cp[4];
	I tmp_146 = (R(8, 27))*cp[16] + tmp_133;
	I tmp_147 = -R(22, 9)*cp[20] + (R(8, 9))*cp[28];
	I tmp_148 = -R(25, 81)*cp[3];
	I tmp_149 = -tmp_120;
	I tmp_150 = tmp_148 + tmp_149;
	I tmp_151 = tmp_16 - tmp_17;
	I tmp_152 = (R(8, 27))*cp[13] + tmp_151;
	I tmp_153 = (R(8, 9))*cp[27] - R(22, 9)*cp[9];
	I tmp_154 = (R(16, 27))*cp[12];
	I tmp_155 = (R(4, 3))*cp[20];
	I tmp_156 = (R(64, 27))*cp[28];
	I tmp_157 = (R(4, 27))*cp[14] + tmp_54;
	I tmp_158 = (R(4, 3))*cp[8];
	I tmp_159 = (R(32, 27))*cp[26] + tmp_158;
	I tmp_160 = (R(8, 9))*cp[6];
	I tmp_161 = -tmp_160;
	I tmp_162 = tmp_116 + tmp_161;
	I tmp_163 = (R(16, 9))*cp[22];
	I tmp_164 = -tmp_163;
	I tmp_165 = tmp_164 + tmp_29;
	I tmp_166 = (R(8, 9))*cp[7];
	I tmp_167 = (R(2, 3))*cp[9];
	I tmp_168 = (R(16, 9))*cp[23];
	I tmp_169 = 2*cp[21];
	I tmp_170 = (R(8, 27))*cp[29] - tmp_169;
	I tmp_171 = (R(8, 3))*cp[25];
	I tmp_172 = (R(10, 27))*cp[15] + tmp_171 + tmp_65;
	I tmp_173 = -tmp_166;
	I tmp_174 = (R(16, 27))*cp[13];
	I tmp_175 = (R(4, 3))*cp[21];
	I tmp_176 = (R(64, 27))*cp[29];
	I tmp_177 = (R(4, 27))*cp[15] + tmp_67;
	I tmp_178 = (R(4, 3))*cp[9];
	I tmp_179 = (R(32, 27))*cp[27] + tmp_178;
	I tmp_180 = -tmp_168;
	I tmp_181 = tmp_151 + tmp_180;
	I tmp_182 = (R(2, 3))*cp[8];
	I tmp_183 = 2*cp[20];
	I tmp_184 = (R(8, 27))*cp[28] - tmp_183;
	I tmp_185 = (R(8, 3))*cp[24];
	I tmp_186 = (R(10, 27))*cp[14] + tmp_185 + tmp_76;
	I tmp_187 = (R(8, 9))*cp[22];
	I tmp_188 = (R(8, 3))*cp[26];
	I tmp_189 = (R(14, 27))*cp[8] + tmp_188;
	I tmp_190 = (R(2, 3))*cp[14];
	I tmp_191 = (R(8, 3))*cp[28];
	I tmp_192 = tmp_191 + tmp_79;
	I tmp_193 = -tmp_185 + tmp_190 + tmp_192;
	I tmp_194 = (R(8, 3))*cp[27];
	I tmp_195 = tmp_122 - tmp_123;
	I tmp_196 = (R(8, 27))*cp[7] + tmp_195;
	I tmp_197 = (R(2, 3))*cp[15];
	I tmp_198 = -R(104, 27)*cp[25] - tmp_197;
	I tmp_199 = (R(8, 9))*cp[23];
	I tmp_200 = (R(14, 27))*cp[9] + tmp_194;
	I tmp_201 = (R(8, 3))*cp[29];
	I tmp_202 = tmp_201 + tmp_88;
	I tmp_203 = -tmp_171 + tmp_197 + tmp_202;
	I tmp_204 = -tmp_132;
	I tmp_205 = tmp_131 + tmp_204;
	I tmp_206 = (R(8, 27))*cp[6] + tmp_205;
	I tmp_207 = -R(104, 27)*cp[24] - tmp_190;
	I tmp_208 = -tmp_156;
	I tmp_209 = (R(32, 27))*cp[12];
	I tmp_210 = tmp_94 + tmp_96;
	I tmp_211 = -R(40, 27)*cp[14] + tmp_210;
	I tmp_212 = -R(26, 27)*cp[15] + tmp_102;
	I tmp_213 = -tmp_176;
	I tmp_214 = (R(32, 27))*cp[13];
	I tmp_215 = tmp_101 + tmp_86;
	I tmp_216 = -R(40, 27)*cp[15] + tmp_215;
	I tmp_217 = -R(26, 27)*cp[14] - tmp_109 - tmp_96;
	I tmp_218 = cp[0] + (R(40, 9))*cp[24];
	I tmp_219 = (R(70, 27))*cp[14] + tmp_218;
	I tmp_220 = -R(40, 9)*cp[22] - tmp_107 + tmp_108 + tmp_135;
	I tmp_221 = -cp[1];
	I tmp_222 = -R(40, 9)*cp[25] + tmp_221;
	I tmp_223 = (R(34, 27))*cp[15] + tmp_222;
	I tmp_224 = (R(40, 9))*cp[23] + tmp_103 - tmp_121 + tmp_166 + tmp_98;
	I tmp_225 = -R(34, 27)*cp[14] + tmp_218;
	I tmp_226 = -R(70, 27)*cp[15] + tmp_222;
	I tmp_227 = -R(11, 81)*cp[2];
	I tmp_228 = -R(148, 27)*cp[8];
	I tmp_229 = -R(16, 9)*cp[17] + tmp_195;
	I tmp_230 = (R(40, 9))*cp[21] + tmp_213;
	I tmp_231 = (R(64, 9))*cp[27] + cp[5];
	I tmp_232 = -R(11, 81)*cp[3];
	I tmp_233 = -R(148, 27)*cp[9];
	I tmp_234 = -R(16, 9)*cp[16];
	I tmp_235 = (R(40, 9))*cp[20] + tmp_208;
	I tmp_236 = (R(64, 9))*cp[26] + cp[4];
	I tmp_237 = (R(16, 27))*cp[16];
	I tmp_238 = (R(32, 27))*cp[28] + tmp_155;
	I tmp_239 = -tmp_187;
	I tmp_240 = tmp_239 + tmp_9;
	I tmp_241 = (R(16, 9))*cp[6];
	I tmp_242 = -tmp_241;
	I tmp_243 = tmp_133 + tmp_242;
	I tmp_244 = (R(2, 3))*cp[21];
	I tmp_245 = (R(16, 9))*cp[7];
	I tmp_246 = (R(8, 27))*cp[27] - tmp_63;
	I tmp_247 = -tmp_199;
	I tmp_248 = -tmp_245;
	I tmp_249 = -R(16, 27)*cp[17] + tmp_124;
	I tmp_250 = (R(32, 27))*cp[29] + tmp_175;
	I tmp_251 = (R(2, 3))*cp[20];
	I tmp_252 = (R(8, 27))*cp[26] - tmp_74;
	I tmp_253 = -R(20, 27)*cp[14] + (R(128, 27))*cp[24] + tmp_78;
	I tmp_254 = -R(16, 27)*cp[22] + tmp_48;
	I tmp_255 = (R(128, 27))*cp[25];
	I tmp_256 = (R(11, 81))*cp[5];
	I tmp_257 = -R(16, 27)*cp[6] + tmp_205;
	I tmp_258 = -R(16, 27)*cp[23] + tmp_18;
	I tmp_259 = (R(8, 81))*cp[10] + tmp_96;
	I tmp_260 = -R(10, 3)*cp[14] + tmp_185;
	I tmp_261 = -R(8, 9)*cp[19];
	I tmp_262 = -R(4, 3)*cp[15] + tmp_215;
	I tmp_263 = (R(8, 81))*cp[11] + tmp_101;
	I tmp_264 = -R(10, 3)*cp[15] + tmp_171;
	I tmp_265 = -R(8, 9)*cp[18];
	I tmp_266 = -R(4, 3)*cp[14] + tmp_210;
	I tmp_267 = cp[0] + (R(64, 9))*cp[24];
	I tmp_268 = (R(200, 27))*cp[14] + tmp_267;
	I tmp_269 = -R(32, 9)*cp[22] + tmp_235 - tmp_91 + tmp_93;
	I tmp_270 = cp[1] + (R(64, 9))*cp[25];
	I tmp_271 = (R(52, 27))*cp[15] + tmp_270;
	I tmp_272 = -R(32, 9)*cp[23] + tmp_230 + tmp_248 - tmp_82 + tmp_84;
	I tmp_273 = (R(52, 27))*cp[14] + tmp_267;
	I tmp_274 = (R(200, 27))*cp[15] + tmp_270;
	I tmp_275 = (R(8, 3))*cp[6];
	I tmp_276 = -tmp_275;
	I tmp_277 = (R(1, 3))*cp[2];
	I tmp_278 = -tmp_277;
	I tmp_279 = tmp_276 + tmp_278;
	I tmp_280 = (R(8, 3))*cp[7];
	I tmp_281 = tmp_169 - tmp_60;
	I tmp_282 = -tmp_280;
	I tmp_283 = (R(1, 3))*cp[3];
	I tmp_284 = -tmp_283;
	I tmp_285 = tmp_282 + tmp_284;
	I tmp_286 = tmp_183 - tmp_72;
	I tmp_287 = (R(14, 27))*cp[20];
	I tmp_288 = (R(8, 27))*cp[23];
	I tmp_289 = (R(14, 27))*cp[21];
	I tmp_290 = (R(8, 27))*cp[22] + tmp_48;
	I tmp_291 = cp[0] + 6*cp[14] + 8*cp[24] + tmp_286 + tmp_75;
	I tmp_292 = 6*cp[15] + cp[1] + 8*cp[25] + tmp_281 + tmp_64;
	I tmp_293 = (R(7, 81))*cp[2];
	I tmp_294 = (R(16, 81))*cp[23];
	I tmp_295 = (R(160, 81))*cp[11];
	I tmp_296 = -R(160, 81)*cp[13] - R(32, 27)*cp[7] + tmp_295;
	I tmp_297 = (R(4, 9))*cp[21] - R(320, 27)*cp[29];
	I tmp_298 = (R(7, 81))*cp[3];
	I tmp_299 = (R(16, 81))*cp[22];
	I tmp_300 = (R(160, 81))*cp[10];
	I tmp_301 = -R(160, 81)*cp[12] - R(32, 27)*cp[6] + tmp_300;
	I tmp_302 = (R(4, 9))*cp[20] - R(320, 27)*cp[28];
	I tmp_303 = (R(32, 27))*cp[16];
	I tmp_304 = (R(32, 27))*cp[17];
	I tmp_305 = -R(32, 9)*cp[6] - tmp_300 + tmp_302 + tmp_52;
	I tmp_306 = -R(32, 9)*cp[7] - tmp_295 + tmp_297 + tmp_41;
	I tmp_307 = (R(280, 27))*cp[29];
	I tmp_308 = (R(2, 9))*cp[21];
	I tmp_309 = (R(560, 81))*cp[11];
	I tmp_310 = -R(560, 81)*cp[13] + tmp_309;
	I tmp_311 = -R(209, 81)*cp[3];
	I tmp_312 = (R(560, 81))*cp[10];
	I tmp_313 = -R(2, 9)*cp[20] - R(280, 27)*cp[28];
	I tmp_314 = -R(40, 9)*cp[6] - tmp_312 + tmp_313 + tmp_32;
	I tmp_315 = (R(40, 9))*cp[7] + tmp_199 + tmp_21 + tmp_307 + tmp_308;
	I tmp_316 = cp[0] - 16*cp[10] - R(16, 3)*cp[6] + tmp_1;
	I tmp_317 = 16*cp[11];
	I tmp_318 = (R(16, 3))*cp[7];
	out[0] = ((R(16, 3))*cp[10] - cp[2] + 16*cp[6] - tmp_0 - tmp_1)*((R(16, 3))*cp[19] + 16*cp[23] - cp[5] - tmp_2 - tmp_3) - ((R(16, 3))*cp[11] - cp[3] + 16*cp[7] - tmp_2 - tmp_5)*((R(16, 3))*cp[18] + 16*cp[22] - cp[4] - tmp_0 - tmp_4);
	out[1] = -(-R(136, 81)*cp[18] + tmp_10 + tmp_7 + tmp_8)*((R(40, 9))*cp[11] + (R(2, 9))*cp[15] + (R(34, 27))*cp[21] - R(184, 27)*cp[23] + (R(280, 27))*cp[25] + (R(560, 81))*cp[7] + tmp_12 + tmp_14 + tmp_19 + tmp_21) + (-R(136, 81)*cp[19] + tmp_12 + tmp_22 + tmp_24)*((R(40, 9))*cp[10] + (R(34, 27))*cp[20] - R(184, 27)*cp[22] + (R(560, 81))*cp[6] - tmp_26 - tmp_29 - tmp_30 - tmp_32 - tmp_33);
	out[2] = -(-R(80, 81)*cp[18] - R(368, 81)*cp[22] - tmp_34 - tmp_35 - tmp_36)*((R(32, 9))*cp[11] - R(52, 27)*cp[21] - R(176, 27)*cp[23] + (R(160, 81))*cp[7] - tmp_18 - tmp_37 - tmp_38 - tmp_41 - tmp_43) + (-R(80, 81)*cp[19] - R(368, 81)*cp[23] - tmp_42 - tmp_44 - tmp_45)*((R(32, 9))*cp[10] - R(52, 27)*cp[20] - R(176, 27)*cp[22] + (R(160, 81))*cp[6] - tmp_46 - tmp_48 - tmp_49 - tmp_52 - tmp_53);
	out[3] = -((R(8, 3))*cp[18] + tmp_54 + tmp_59)*((R(8, 3))*cp[11] + (R(8, 3))*cp[13] - 6*cp[21] - cp[3] - tmp_60 - tmp_61 - tmp_64 - tmp_66) + ((R(8, 3))*cp[19] + tmp_67 + tmp_71)*((R(8, 3))*cp[10] + (R(8, 3))*cp[12] - 6*cp[20] - cp[2] - tmp_55 - tmp_72 - tmp_75 - tmp_77);
	out[4] = -((R(368, 81))*cp[18] + (R(80, 81))*cp[22] + tmp_35 + tmp_79 + tmp_80)*((R(16, 9))*cp[11] + (R(32, 9))*cp[13] - R(200, 27)*cp[21] - tmp_38 - tmp_81 - tmp_83 - tmp_84 - tmp_87) + ((R(368, 81))*cp[19] + (R(80, 81))*cp[23] + tmp_44 + tmp_88 + tmp_89)*((R(16, 9))*cp[10] + (R(32, 9))*cp[12] - R(200, 27)*cp[20] - tmp_49 - tmp_90 - tmp_92 - tmp_93 - tmp_95);
	out[5] = -((R(136, 81))*cp[22] + (R(209, 81))*cp[4] - tmp_8 - tmp_97)*((R(8, 9))*cp[11] + (R(40, 9))*cp[13] + (R(560, 81))*cp[17] - R(70, 27)*cp[21] + (R(40, 27))*cp[23] + tmp_102 + tmp_103 + tmp_14 + tmp_81 - tmp_98 - tmp_99) + ((R(136, 81))*cp[23] - tmp_104 - tmp_105 - tmp_22)*((R(40, 9))*cp[12] + (R(560, 81))*cp[16] - R(70, 27)*cp[20] + (R(40, 27))*cp[22] - tmp_106 - tmp_107 - tmp_108 - tmp_110 - tmp_30 + tmp_90);
	out[6] = -((R(25, 3))*cp[4] + tmp_111)*((R(16, 3))*cp[13] + 16*cp[17] - tmp_112 + tmp_113 + tmp_13) + ((R(25, 3))*cp[5] + tmp_113)*((R(16, 3))*cp[12] + 16*cp[16] - cp[2] + tmp_111 + tmp_114);
	out[7] = (-R(136, 81)*cp[10] + tmp_115 + tmp_117 + tmp_7)*((R(2, 9))*cp[15] + (R(40, 9))*cp[19] + (R(560, 81))*cp[23] + (R(280, 27))*cp[25] - R(184, 27)*cp[7] + (R(34, 27))*cp[9] - tmp_11 - tmp_119 - tmp_120 - tmp_121 - tmp_124 - tmp_125) - (-R(136, 81)*cp[11] + tmp_12 + tmp_126 + tmp_128)*((R(40, 9))*cp[18] + (R(560, 81))*cp[22] - R(184, 27)*cp[6] + (R(34, 27))*cp[8] - tmp_130 - tmp_133 - tmp_135 - tmp_136 - tmp_33);
	out[8] = -(-R(112, 81)*cp[11] + (R(26, 27))*cp[21] - R(88, 27)*cp[23] - R(104, 81)*cp[7] - tmp_144 - tmp_150 - tmp_152 - tmp_153)*(-R(112, 81)*cp[18] - R(104, 81)*cp[22] - R(88, 27)*cp[6] + (R(26, 27))*cp[8] - tmp_140 - tmp_145 - tmp_146 - tmp_147 + tmp_31) + (-R(112, 81)*cp[10] + (R(26, 27))*cp[20] - R(88, 27)*cp[22] - R(104, 81)*cp[6] + tmp_134 - tmp_137 - tmp_138 - tmp_139 - tmp_140)*(-R(112, 81)*cp[19] - R(104, 81)*cp[23] - R(88, 27)*cp[7] + (R(26, 27))*cp[9] - tmp_141 - tmp_142 - tmp_143 - tmp_144 - tmp_20);
	out[9] = (-R(88, 81)*cp[10] - tmp_154 - tmp_155 + tmp_156 + tmp_157 + tmp_159 + tmp_162 + tmp_165)*(-R(56, 81)*cp[19] + (R(104, 27))*cp[27] - tmp_142 - tmp_166 + tmp_167 - tmp_168 - tmp_170 - tmp_172 - tmp_45) - (-R(88, 81)*cp[11] + tmp_127 + tmp_173 - tmp_174 - tmp_175 + tmp_176 + tmp_177 + tmp_179 + tmp_181)*(-R(56, 81)*cp[18] + (R(104, 27))*cp[26] - tmp_146 - tmp_160 - tmp_163 + tmp_182 - tmp_184 - tmp_186 - tmp_36);
	out[10] = (-R(64, 81)*cp[10] - R(10, 3)*cp[20] + tmp_117 + tmp_187 + tmp_189 + tmp_193 + tmp_26)*((R(16, 9))*cp[19] + (R(56, 81))*cp[23] + (R(10, 27))*cp[9] + tmp_118 + tmp_170 + tmp_194 + tmp_196 + tmp_198 + tmp_70 + tmp_88) - (-R(64, 81)*cp[11] - R(10, 3)*cp[21] + tmp_128 - tmp_15 + tmp_199 + tmp_200 + tmp_203)*((R(16, 9))*cp[18] + (R(56, 81))*cp[22] + (R(10, 27))*cp[8] + tmp_129 + tmp_184 + tmp_188 + tmp_206 + tmp_207 + tmp_58 + tmp_79);
	out[11] = (-R(40, 81)*cp[10] - R(40, 27)*cp[20] + (R(40, 81))*cp[6] - tmp_137 - tmp_208 - tmp_209 - tmp_211 - tmp_92)*((R(88, 27))*cp[17] + (R(104, 81))*cp[19] + (R(112, 81))*cp[23] - R(56, 27)*cp[27] + (R(2, 27))*cp[9] + tmp_143 + tmp_196 + tmp_212 + tmp_89) - (-R(40, 81)*cp[11] - R(40, 27)*cp[21] + (R(40, 81))*cp[7] - tmp_148 - tmp_213 - tmp_214 - tmp_216 - tmp_83)*((R(88, 27))*cp[16] + (R(104, 81))*cp[18] + (R(112, 81))*cp[22] - R(56, 27)*cp[26] + (R(2, 27))*cp[8] + tmp_147 + tmp_206 + tmp_217 + tmp_80);
	out[12] = (-R(40, 27)*cp[12] + (R(560, 81))*cp[16] + tmp_162 + tmp_204 + tmp_219 + tmp_220)*((R(184, 27))*cp[17] - tmp_104 - tmp_124 - tmp_149 - tmp_223 - tmp_224) - (-R(40, 27)*cp[13] + (R(560, 81))*cp[17] - tmp_123 - tmp_150 - tmp_224 - tmp_226)*((R(184, 27))*cp[16] + (R(209, 81))*cp[4] + tmp_161 + tmp_205 + tmp_220 + tmp_225);
	out[13] = (-R(80, 81)*cp[10] - R(368, 81)*cp[6] - tmp_227 - tmp_228 - tmp_34)*((R(32, 9))*cp[19] + (R(160, 81))*cp[23] - R(176, 27)*cp[7] - R(52, 27)*cp[9] - tmp_229 - tmp_230 - tmp_231 - tmp_43) - (-R(80, 81)*cp[11] - R(368, 81)*cp[7] - tmp_232 - tmp_233 - tmp_42)*((R(32, 9))*cp[18] + (R(160, 81))*cp[22] - R(176, 27)*cp[6] - R(52, 27)*cp[8] - tmp_205 - tmp_234 - tmp_235 - tmp_236 - tmp_53);
	out[14] = -(-R(88, 81)*cp[18] + tmp_157 - tmp_158 - tmp_237 + tmp_238 + tmp_240 + tmp_243 + tmp_50)*(-R(56, 81)*cp[11] + (R(104, 27))*cp[29] - tmp_152 - tmp_172 - tmp_199 - tmp_232 + tmp_244 - tmp_245 - tmp_246) + (-R(56, 81)*cp[10] + (R(104, 27))*cp[28] - tmp_138 - tmp_186 - tmp_187 - tmp_227 - tmp_241 + tmp_251 - tmp_252)*(-R(88, 81)*cp[19] + tmp_177 - tmp_178 + tmp_23 + tmp_247 + tmp_248 + tmp_249 + tmp_250 + tmp_39);
	out[15] = (-R(32, 81)*cp[10] - R(20, 27)*cp[20] + (R(128, 27))*cp[28] + (R(32, 81))*cp[6] - tmp_154 - tmp_227 - tmp_253 - tmp_254)*((R(20, 27))*cp[15] - R(32, 81)*cp[19] + (R(32, 81))*cp[23] + (R(128, 27))*cp[27] + (R(16, 27))*cp[7] - R(20, 27)*cp[9] + tmp_249 - tmp_255 + tmp_256 + tmp_88) - (-R(32, 81)*cp[18] + (R(32, 81))*cp[22] + (R(128, 27))*cp[26] - R(20, 27)*cp[8] - tmp_237 - tmp_253 - tmp_257 - tmp_36)*(-R(32, 81)*cp[11] + (R(20, 27))*cp[15] - R(20, 27)*cp[21] + (R(128, 27))*cp[29] + (R(32, 81))*cp[7] - tmp_174 - tmp_232 - tmp_255 - tmp_258 - tmp_85);
	out[16] = -((R(88, 81))*cp[22] - R(4, 27)*cp[8] - tmp_234 - tmp_238 - tmp_257 - tmp_265 - tmp_266 - tmp_57)*((R(64, 81))*cp[7] - tmp_15 - tmp_200 + tmp_201 - tmp_232 - tmp_244 - tmp_247 - tmp_263 - tmp_264) + ((R(88, 81))*cp[23] + (R(16, 27))*cp[7] - R(4, 27)*cp[9] - tmp_229 - tmp_250 - tmp_261 - tmp_262 - tmp_69)*((R(64, 81))*cp[6] - tmp_189 + tmp_191 - tmp_227 - tmp_239 - tmp_25 - tmp_251 - tmp_259 - tmp_260);
	out[17] = -((R(176, 27))*cp[16] + tmp_243 + tmp_269 + tmp_273 + tmp_80)*((R(160, 81))*cp[17] + (R(11, 81))*cp[3] + tmp_123 - tmp_214 + tmp_272 + tmp_274) + ((R(176, 27))*cp[17] + tmp_124 + tmp_271 + tmp_272 + tmp_89)*((R(160, 81))*cp[16] + (R(11, 81))*cp[2] + tmp_132 - tmp_209 + tmp_242 + tmp_268 + tmp_269);
	out[18] = ((R(8, 3))*cp[10] + tmp_279 + tmp_54)*((R(8, 3))*cp[17] + (R(8, 3))*cp[19] - cp[5] - 6*cp[9] - tmp_280 - tmp_281 - tmp_62 - tmp_66) - ((R(8, 3))*cp[11] + tmp_285 + tmp_67)*((R(8, 3))*cp[16] + (R(8, 3))*cp[18] - cp[4] - 6*cp[8] - tmp_275 - tmp_286 - tmp_73 - tmp_77);
	out[19] = -(-R(64, 81)*cp[18] - R(10, 3)*cp[8] + tmp_10 + tmp_130 + tmp_160 + tmp_188 + tmp_193 + tmp_287)*((R(16, 9))*cp[11] + (R(10, 27))*cp[21] + (R(56, 81))*cp[7] + tmp_19 + tmp_198 + tmp_202 + tmp_246 + tmp_284 + tmp_288) + (-R(64, 81)*cp[19] - R(10, 3)*cp[9] + tmp_119 + tmp_166 + tmp_194 + tmp_203 + tmp_24 + tmp_289)*((R(16, 9))*cp[10] + (R(10, 27))*cp[20] + (R(56, 81))*cp[6] + tmp_192 + tmp_207 + tmp_25 + tmp_252 + tmp_278 + tmp_290);
	out[20] = -((R(8, 9))*cp[11] - R(4, 27)*cp[21] + (R(88, 81))*cp[7] - tmp_179 - tmp_258 - tmp_262 - tmp_283 - tmp_37)*((R(64, 81))*cp[22] - tmp_129 - tmp_161 - tmp_182 + tmp_188 - tmp_191 - tmp_260 - tmp_287 - tmp_36 - tmp_97) + (-R(4, 27)*cp[20] + (R(88, 81))*cp[6] - tmp_106 - tmp_159 - tmp_254 - tmp_266 - tmp_277 - tmp_46)*((R(64, 81))*cp[23] - tmp_105 - tmp_118 - tmp_167 - tmp_173 + tmp_194 - tmp_201 - tmp_264 - tmp_289 - tmp_45);
	out[21] = ((R(8, 3))*cp[12] + tmp_279 + tmp_291 + tmp_56)*((R(8, 3))*cp[17] + tmp_282 + tmp_292 + tmp_71) - ((R(8, 3))*cp[13] + tmp_285 + tmp_292 + tmp_68)*((R(8, 3))*cp[16] + tmp_276 + tmp_291 + tmp_59);
	out[22] = ((R(368, 81))*cp[10] + (R(80, 81))*cp[6] + tmp_228 + tmp_293 + tmp_79)*((R(32, 9))*cp[17] + (R(16, 9))*cp[19] - R(200, 27)*cp[9] - tmp_231 - tmp_294 - tmp_296 - tmp_297 - tmp_87) - ((R(368, 81))*cp[11] + (R(80, 81))*cp[7] + tmp_233 + tmp_298 + tmp_88)*((R(32, 9))*cp[16] + (R(16, 9))*cp[18] - R(200, 27)*cp[8] - tmp_236 - tmp_299 - tmp_301 - tmp_302 - tmp_95);
	out[23] = -(-R(40, 81)*cp[18] + (R(40, 81))*cp[22] - R(40, 27)*cp[8] - tmp_145 - tmp_211 - tmp_301 - tmp_303 - tmp_51)*((R(104, 81))*cp[11] + (R(88, 27))*cp[13] + (R(2, 27))*cp[21] - R(56, 27)*cp[29] + (R(112, 81))*cp[7] + tmp_153 + tmp_18 + tmp_212 + tmp_288 + tmp_298) + (-R(40, 81)*cp[19] + (R(40, 81))*cp[23] - R(40, 27)*cp[9] - tmp_141 - tmp_216 - tmp_296 - tmp_304 - tmp_40)*((R(104, 81))*cp[10] + (R(88, 27))*cp[12] + (R(2, 27))*cp[20] - R(56, 27)*cp[28] + (R(112, 81))*cp[6] + tmp_139 + tmp_217 + tmp_290 + tmp_293);
	out[24] = ((R(176, 27))*cp[12] + tmp_165 + tmp_273 + tmp_293 + tmp_305)*((R(160, 81))*cp[13] + tmp_16 + tmp_180 + tmp_256 + tmp_274 - tmp_304 + tmp_306) - ((R(176, 27))*cp[13] + tmp_181 + tmp_271 + tmp_298 + tmp_306)*((R(160, 81))*cp[12] + (R(11, 81))*cp[4] + tmp_164 + tmp_268 + tmp_28 - tmp_303 + tmp_305);
	out[25] = ((R(209, 81))*cp[2] + (R(136, 81))*cp[6] - tmp_115 - tmp_259)*((R(40, 9))*cp[17] + (R(40, 27))*cp[7] - R(70, 27)*cp[9] - tmp_100 - tmp_101 - tmp_125 - tmp_261 + tmp_294 + tmp_307 + tmp_308 - tmp_310 - tmp_99) - ((R(136, 81))*cp[7] - tmp_126 - tmp_263 - tmp_311)*((R(560, 81))*cp[12] + (R(40, 9))*cp[16] + (R(40, 27))*cp[6] - R(70, 27)*cp[8] - tmp_110 - tmp_136 - tmp_265 + tmp_299 - tmp_312 - tmp_313);
	out[26] = ((R(184, 27))*cp[12] + (R(209, 81))*cp[2] + tmp_225 + tmp_239 + tmp_314 + tmp_48)*(-R(40, 27)*cp[17] - tmp_141 - tmp_16 - tmp_226 - tmp_310 - tmp_315) - ((R(560, 81))*cp[12] - R(40, 27)*cp[16] + tmp_219 + tmp_240 + tmp_314 + tmp_47)*((R(184, 27))*cp[13] - tmp_151 - tmp_223 - tmp_309 - tmp_311 - tmp_315);
	out[27] = ((R(25, 3))*cp[2] + tmp_316)*(16*cp[13] + (R(16, 3))*cp[17] - cp[5] - tmp_112 - tmp_221 - tmp_317 - tmp_318 + tmp_5) - (16*cp[12] + (R(16, 3))*cp[16] - cp[4] + tmp_114 + tmp_316)*(cp[1] + (R(25, 3))*cp[3] - tmp_317 - tmp_318 + tmp_5);
}}
#undef R
#undef I